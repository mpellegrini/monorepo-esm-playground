name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  build_lint_and_test:
    name: Build, lint, and test
    runs-on:
      group: ubuntu-larger-runners
    permissions:
      contents: 'read'
      actions: 'read'

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `turbo xxx --filter` commands
        uses: nrwl/nx-set-shas@v4

      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --ignore-scripts

      - name: Find Affected Projects
        id: affected_projects
        run: |
          NEEDS_DEPLOY=0
          (pnpm build --filter=apps/project-ego...[${{ env.NX_HEAD }}...${{ env.NX_BASE }}] --dry=json) || NEEDS_DEPLOY=1
          echo "{deploy_website}=${NEEDS_DEPLOY}" >> $GITHUB_OUTPUT

      - name: Build Monorepo
        run: pnpm build --filter=...[${{ env.NX_HEAD }}...${{ env.NX_BASE }}]

      - name: Lint Monorepo
        run: pnpm lint --filter=...[${{ env.NX_HEAD }}...${{ env.NX_BASE }}]

      - name: Test Monorepo
        run: pnpm test --filter=...[${{ env.NX_HEAD }}...${{ env.NX_BASE }}]

  aws_deploy:
    name: AWS Deploy
    if: github.ref == 'refs/heads/main'
    needs: build_lint_and_test
    runs-on:
      group: ubuntu-larger-runners
    permissions:
      id-token: write
      contents: read
    concurrency:
      group: ${{ format('{0}-{1}', github.workflow, github.job) }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --ignore-scripts

      - name: Build Monorepo
        run: pnpm build --filter={./infrastructure/awscdk-app}...

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: CDK Diff
        run: pnpm --filter "@infrastructure/awscdk-app" cdk diff

      - name: CDK Synth
        run: pnpm --filter "@infrastructure/awscdk-app" cdk synth

      - name: CDK Deploy
        run: pnpm --filter "@infrastructure/awscdk-app" cdk deploy --require-approval never
